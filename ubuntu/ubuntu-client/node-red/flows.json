[
    {
        "id": "0277478f1e68b0ce",
        "type": "tab",
        "label": "1 RPI",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4e821b48bbd42ca3",
        "type": "tab",
        "label": "Main Dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4db1d4819dfea4ef",
        "type": "tab",
        "label": "Reservation",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "df1a303ec9e1b819",
        "type": "tab",
        "label": "1Reservation",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d959e01e9af70966",
        "type": "tab",
        "label": "Support",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0ab432dc59b6d0a3",
        "type": "tab",
        "label": "Logs",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "19da2f4cf4bf4170",
        "type": "tab",
        "label": "Users",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a71c83548b86d5cf",
        "type": "tab",
        "label": "CreateUser",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "01557fa3c5d57cbe",
        "type": "tab",
        "label": "EditUser",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "50484f8edde3dcf6",
        "type": "group",
        "z": "4e821b48bbd42ca3",
        "name": "Group",
        "style": {
            "label": false
        },
        "nodes": [
            "55b5a88e854315aa",
            "a91a3199ac6a18da",
            "209054f98f416386",
            "68e0cfa4b06db715",
            "a580835a1833e887"
        ],
        "x": 74,
        "y": 139,
        "w": 732,
        "h": 142
    },
    {
        "id": "829459fd4bc2bd59",
        "type": "group",
        "z": "4e821b48bbd42ca3",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "5588a030b4ba3054",
            "4a0e9bc2ee73a43b",
            "99e8dec59f4301b0",
            "1a334ccfcf23875f",
            "3244fdb1a10c6c55"
        ],
        "x": 74,
        "y": 319,
        "w": 732,
        "h": 142
    },
    {
        "id": "cd243a0843f64ae7",
        "type": "group",
        "z": "4e821b48bbd42ca3",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ef5500a5e12cb9c4",
            "803591f4887b5365",
            "d01c87dadb6b1f01",
            "b67d5e6402ba9e62",
            "70fc72c1310dd2e9"
        ],
        "x": 74,
        "y": 499,
        "w": 732,
        "h": 142
    },
    {
        "id": "52529d8d7b615ffa",
        "type": "group",
        "z": "4e821b48bbd42ca3",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "fb85b18a99c3394a",
            "f032958d3bcb43c7",
            "4f7dd4b144e7f41d"
        ],
        "x": 1054,
        "y": 479,
        "w": 292,
        "h": 162
    },
    {
        "id": "9e1f662934605284",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "SmartOffice",
            "hideToolbar": "false",
            "allowSwipe": "mouse",
            "lockMenu": "true",
            "allowTempTheme": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "1db4abaa008c9aa6",
        "type": "ui_group",
        "name": "Local associé",
        "tab": "b58955a989bd717a",
        "order": 2,
        "disp": false,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "08886a7cd4dd855e",
        "type": "mongodb4-client",
        "name": "MongoDB",
        "protocol": "mongodb",
        "hostname": "localhost",
        "port": "27017",
        "dbName": "reservationDB",
        "appName": "",
        "authSource": "admin",
        "authMechanism": "DEFAULT",
        "tls": false,
        "tlsCAFile": "",
        "tlsCertificateKeyFile": "",
        "tlsInsecure": false,
        "connectTimeoutMS": "30000",
        "socketTimeoutMS": "0",
        "minPoolSize": "0",
        "maxPoolSize": "100",
        "maxIdleTimeMS": "0",
        "uri": "",
        "advanced": "{}",
        "uriTabActive": "tab-uri-simple"
    },
    {
        "id": "b58955a989bd717a",
        "type": "ui_tab",
        "name": "RPI",
        "icon": "",
        "order": 6,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "40a836b15e21b5f0",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1760465bb1ca33bd",
        "type": "ui_group",
        "name": "Main",
        "tab": "40a836b15e21b5f0",
        "order": 1,
        "disp": false,
        "width": 28,
        "collapse": false,
        "className": ""
    },
    {
        "id": "dc7fd2a2a5b25c12",
        "type": "ui_tab",
        "name": "Réservation",
        "icon": "",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7d4fc252c55d200f",
        "type": "ui_tab",
        "name": "Support",
        "icon": "",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0e66de217ecb6d6e",
        "type": "ui_tab",
        "name": "Logs",
        "icon": "",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f4731d1939b558e5",
        "type": "ui_tab",
        "name": "Utilisateurs",
        "icon": "",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "821b48d3e4d5beb6",
        "type": "ui_group",
        "name": "Main",
        "tab": "dc7fd2a2a5b25c12",
        "order": 1,
        "disp": false,
        "width": 29,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b255ced8c894f4f0",
        "type": "ui_group",
        "name": "Main",
        "tab": "7d4fc252c55d200f",
        "order": 1,
        "disp": false,
        "width": 34,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f87d496c91fac1c3",
        "type": "ui_group",
        "name": "Main",
        "tab": "0e66de217ecb6d6e",
        "order": 1,
        "disp": false,
        "width": 29,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b433e86cb98af344",
        "type": "ui_group",
        "name": "Main",
        "tab": "f4731d1939b558e5",
        "order": 1,
        "disp": false,
        "width": 29,
        "collapse": false,
        "className": ""
    },
    {
        "id": "841582caaa17523e",
        "type": "ui_group",
        "name": "Appareils",
        "tab": "40a836b15e21b5f0",
        "order": 2,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "8753015cdcb44cc3",
        "type": "ui_group",
        "name": "Carte",
        "tab": "40a836b15e21b5f0",
        "order": 3,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "7fda8290ea03273e",
        "type": "ui_group",
        "name": "Qualité de l'air",
        "tab": "40a836b15e21b5f0",
        "order": 4,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "7c4ba8e1e71b582f",
        "type": "ui_group",
        "name": "Bruit",
        "tab": "b58955a989bd717a",
        "order": 3,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "eba1eeab2c58edb8",
        "type": "ui_group",
        "name": "Température",
        "tab": "b58955a989bd717a",
        "order": 4,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "77cc3ec7a2ad9d4e",
        "type": "ui_group",
        "name": "Humidité",
        "tab": "b58955a989bd717a",
        "order": 5,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f755c7094e0204d7",
        "type": "ui_group",
        "name": "Luminosité",
        "tab": "b58955a989bd717a",
        "order": 6,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6d9ac2ca21f48ee4",
        "type": "ui_group",
        "name": "Caméra",
        "tab": "b58955a989bd717a",
        "order": 7,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "78055e7e1fa8ec1f",
        "type": "ui_group",
        "name": "Alerte",
        "tab": "b58955a989bd717a",
        "order": 9,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "eb521a47e9a8db09",
        "type": "ui_group",
        "name": "Derniers scans de cartes",
        "tab": "b58955a989bd717a",
        "order": 8,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "de51837b8b377b3b",
        "type": "ui_group",
        "name": "Réservation",
        "tab": "b58955a989bd717a",
        "order": 10,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f36af4e5677b5672",
        "type": "ui_group",
        "name": "GPS",
        "tab": "b58955a989bd717a",
        "order": 11,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f988ca3073539a8c",
        "type": "ui_group",
        "name": "Header",
        "tab": "b58955a989bd717a",
        "order": 1,
        "disp": false,
        "width": 34,
        "collapse": false,
        "className": ""
    },
    {
        "id": "2dd860a0786620d5",
        "type": "ui_tab",
        "name": "1Reservation",
        "icon": "",
        "order": 7,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "ca6e864468baaad4",
        "type": "ui_group",
        "name": "Form",
        "tab": "2dd860a0786620d5",
        "order": 1,
        "disp": false,
        "width": "23",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c7b473b3c51d1231",
        "type": "ui_tab",
        "name": "CreateUser",
        "icon": "",
        "order": 8,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "600bf87db0283dac",
        "type": "ui_group",
        "name": "Main",
        "tab": "c7b473b3c51d1231",
        "order": 1,
        "disp": false,
        "width": 34,
        "collapse": false,
        "className": ""
    },
    {
        "id": "fe00c51b9ccea92f",
        "type": "ui_spacer",
        "z": "19da2f4cf4bf4170",
        "name": "spacer",
        "group": "600bf87db0283dac",
        "order": 2,
        "width": 11,
        "height": 1
    },
    {
        "id": "d9c60283f21d18d6",
        "type": "ui_spacer",
        "z": "19da2f4cf4bf4170",
        "name": "spacer",
        "group": "600bf87db0283dac",
        "order": 4,
        "width": 11,
        "height": 1
    },
    {
        "id": "bf68deda59755705",
        "type": "ui_tab",
        "name": "EditUser",
        "icon": "",
        "order": 9,
        "disabled": true,
        "hidden": true
    },
    {
        "id": "1e09fa150998fee1",
        "type": "ui_group",
        "name": "Main",
        "tab": "bf68deda59755705",
        "order": 1,
        "disp": false,
        "width": 34,
        "collapse": false,
        "className": ""
    },
    {
        "id": "21e05f13d924f582",
        "type": "ui_spacer",
        "z": "01557fa3c5d57cbe",
        "name": "spacer",
        "group": "1e09fa150998fee1",
        "order": 2,
        "width": 5,
        "height": 1
    },
    {
        "id": "f5ead6b6eb26ef4a",
        "type": "ui_spacer",
        "z": "01557fa3c5d57cbe",
        "name": "spacer",
        "group": "1e09fa150998fee1",
        "order": 4,
        "width": 3,
        "height": 1
    },
    {
        "id": "2e6d4ba76a39cb0c",
        "type": "ui_spacer",
        "z": "01557fa3c5d57cbe",
        "name": "spacer",
        "group": "1e09fa150998fee1",
        "order": 5,
        "width": 34,
        "height": 1
    },
    {
        "id": "9c09494ed61fa6c9",
        "type": "mqtt-broker",
        "name": "public-broker",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "tls": "",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "eaa024f859c5f78e",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": true,
        "alpnprotocol": ""
    },
    {
        "id": "5eaa2c834f3274ec",
        "type": "ui_spacer",
        "z": "4db1d4819dfea4ef",
        "name": "spacer",
        "group": "821b48d3e4d5beb6",
        "order": 3,
        "width": 29,
        "height": 1
    },
    {
        "id": "4b10401f138508c4",
        "type": "ui_spacer",
        "z": "0ab432dc59b6d0a3",
        "name": "spacer",
        "group": "b433e86cb98af344",
        "order": 3,
        "width": 29,
        "height": 1
    },
    {
        "id": "f3a08283dd9986da",
        "type": "ui_spacer",
        "z": "4e821b48bbd42ca3",
        "name": "spacer",
        "group": "841582caaa17523e",
        "order": 1,
        "width": 12,
        "height": 1
    },
    {
        "id": "9ad2bfdd9930ce40",
        "type": "ui_spacer",
        "z": "4e821b48bbd42ca3",
        "name": "spacer",
        "group": "841582caaa17523e",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "8460b08d2593fcc7",
        "type": "ui_spacer",
        "z": "4e821b48bbd42ca3",
        "name": "spacer",
        "group": "841582caaa17523e",
        "order": 6,
        "width": 12,
        "height": 1
    },
    {
        "id": "132a750d071fc015",
        "type": "ui_spacer",
        "z": "4e821b48bbd42ca3",
        "name": "spacer",
        "group": "841582caaa17523e",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "f4ee0191ec87e50d",
        "type": "ui_spacer",
        "z": "4e821b48bbd42ca3",
        "name": "spacer",
        "group": "841582caaa17523e",
        "order": 11,
        "width": 12,
        "height": 1
    },
    {
        "id": "c8d06474d29e7d88",
        "type": "ui_spacer",
        "z": "4e821b48bbd42ca3",
        "name": "spacer",
        "group": "841582caaa17523e",
        "order": 13,
        "width": 4,
        "height": 1
    },
    {
        "id": "d3ab588c8981d764",
        "type": "ui_spacer",
        "z": "4e821b48bbd42ca3",
        "name": "spacer",
        "group": "7fda8290ea03273e",
        "order": 4,
        "width": 13,
        "height": 1
    },
    {
        "id": "64a222381a385473",
        "type": "ui_spacer",
        "z": "d959e01e9af70966",
        "name": "spacer",
        "group": "b255ced8c894f4f0",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "58e28a0c5ac22840",
        "type": "ui_spacer",
        "z": "d959e01e9af70966",
        "name": "spacer",
        "group": "b255ced8c894f4f0",
        "order": 3,
        "width": 34,
        "height": 1
    },
    {
        "id": "ce85ca96bf7f3312",
        "type": "ui_spacer",
        "z": "0ab432dc59b6d0a3",
        "name": "spacer",
        "group": "f87d496c91fac1c3",
        "order": 4,
        "width": 3,
        "height": 1
    },
    {
        "id": "f3794d5d57b171e6",
        "type": "ui_spacer",
        "z": "0ab432dc59b6d0a3",
        "name": "spacer",
        "group": "f87d496c91fac1c3",
        "order": 5,
        "width": 29,
        "height": 1
    },
    {
        "id": "7ce08affddeab4ea",
        "type": "ui_gauge",
        "z": "0277478f1e68b0ce",
        "name": "temperature",
        "group": "eba1eeab2c58edb8",
        "order": 1,
        "width": 12,
        "height": 2,
        "gtype": "gage",
        "title": "Temperature",
        "label": "°",
        "format": "{{value}}",
        "min": 0,
        "max": "40",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 590,
        "y": 160,
        "wires": []
    },
    {
        "id": "a951431026817237",
        "type": "inject",
        "z": "0277478f1e68b0ce",
        "name": "temperature",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "25",
        "payloadType": "num",
        "x": 150,
        "y": 160,
        "wires": [
            [
                "1c572a9b6aad7cc2"
            ]
        ]
    },
    {
        "id": "7006526e0ba7d14a",
        "type": "inject",
        "z": "0277478f1e68b0ce",
        "name": "light_sensor",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5",
        "payloadType": "num",
        "x": 150,
        "y": 480,
        "wires": [
            [
                "a322f0f04a91ee26"
            ]
        ]
    },
    {
        "id": "340db043376c7982",
        "type": "inject",
        "z": "0277478f1e68b0ce",
        "name": "sound_sensor",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 240,
        "wires": [
            [
                "14651d281752c495"
            ]
        ]
    },
    {
        "id": "5ea7201186c39d78",
        "type": "ui_gauge",
        "z": "0277478f1e68b0ce",
        "name": "light_level ",
        "group": "f755c7094e0204d7",
        "order": 1,
        "width": 12,
        "height": 2,
        "gtype": "gage",
        "title": "Luminosité",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "colors": [
            "#99c1f1",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 600,
        "y": 480,
        "wires": []
    },
    {
        "id": "1c572a9b6aad7cc2",
        "type": "function",
        "z": "0277478f1e68b0ce",
        "name": "set payload",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 160,
        "wires": [
            [
                "7ce08affddeab4ea"
            ]
        ]
    },
    {
        "id": "a322f0f04a91ee26",
        "type": "function",
        "z": "0277478f1e68b0ce",
        "name": "set payload",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 480,
        "wires": [
            [
                "5ea7201186c39d78"
            ]
        ]
    },
    {
        "id": "14651d281752c495",
        "type": "function",
        "z": "0277478f1e68b0ce",
        "name": "set payload",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 240,
        "wires": [
            [
                "3fa65fc688213d56"
            ]
        ]
    },
    {
        "id": "3fa65fc688213d56",
        "type": "ui_gauge",
        "z": "0277478f1e68b0ce",
        "name": "sound-level",
        "group": "7c4ba8e1e71b582f",
        "order": 1,
        "width": 12,
        "height": 2,
        "gtype": "gage",
        "title": "Sound level",
        "label": "°",
        "format": "{{value}}",
        "min": 0,
        "max": "40",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": true,
        "className": "",
        "x": 630,
        "y": 240,
        "wires": []
    },
    {
        "id": "2cbf6b2a0733df7e",
        "type": "inject",
        "z": "0277478f1e68b0ce",
        "name": "local",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "290 C",
        "payloadType": "str",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "b25b11cde203614a"
            ]
        ]
    },
    {
        "id": "b25b11cde203614a",
        "type": "ui_form",
        "z": "0277478f1e68b0ce",
        "name": "associated_local",
        "label": "Local associé",
        "group": "1db4abaa008c9aa6",
        "order": 1,
        "width": 12,
        "height": 1,
        "options": [
            {
                "label": "",
                "value": "local1",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "local1": ""
        },
        "payload": "",
        "submit": "Enregistrer",
        "cancel": "Supprimer",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 390,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "8d83378d17572eea",
        "type": "ui_gauge",
        "z": "0277478f1e68b0ce",
        "name": "humidity",
        "group": "77cc3ec7a2ad9d4e",
        "order": 1,
        "width": 12,
        "height": 2,
        "gtype": "gage",
        "title": "Humidité",
        "label": "°",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 600,
        "y": 400,
        "wires": []
    },
    {
        "id": "d1b7f378b4eafaa2",
        "type": "inject",
        "z": "0277478f1e68b0ce",
        "name": "humidity",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "20",
        "payloadType": "num",
        "x": 140,
        "y": 400,
        "wires": [
            [
                "23653ae5c39ed34f"
            ]
        ]
    },
    {
        "id": "23653ae5c39ed34f",
        "type": "function",
        "z": "0277478f1e68b0ce",
        "name": "set payload",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 400,
        "wires": [
            [
                "8d83378d17572eea"
            ]
        ]
    },
    {
        "id": "ee93e7ac092f78b3",
        "type": "ui_text",
        "z": "0277478f1e68b0ce",
        "group": "f988ca3073539a8c",
        "order": 1,
        "width": 34,
        "height": 1,
        "name": "title",
        "label": "Vue d'ensemble > ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "32",
        "color": "#ffffff",
        "x": 350,
        "y": 60,
        "wires": []
    },
    {
        "id": "93981230535d1cb9",
        "type": "inject",
        "z": "0277478f1e68b0ce",
        "name": "290 C",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "290C ",
        "payloadType": "str",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "ee93e7ac092f78b3"
            ]
        ]
    },
    {
        "id": "c9b96fcb3f9a4c9f",
        "type": "ui_button",
        "z": "0277478f1e68b0ce",
        "name": "camera_button",
        "group": "6d9ac2ca21f48ee4",
        "order": 1,
        "width": 12,
        "height": 2,
        "passthru": false,
        "label": "Accéder à la caméra",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 560,
        "wires": [
            [
                "a147a8a9cc0a78fb"
            ]
        ]
    },
    {
        "id": "3d8a4d7a697b706b",
        "type": "ui_button",
        "z": "0277478f1e68b0ce",
        "name": "alert_button",
        "group": "78055e7e1fa8ec1f",
        "order": 2,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Désactiver l'alarme",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 640,
        "wires": [
            [
                "75680836e4f80837"
            ]
        ]
    },
    {
        "id": "75680836e4f80837",
        "type": "ui_text",
        "z": "0277478f1e68b0ce",
        "group": "78055e7e1fa8ec1f",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "alert",
        "label": "Température élevée",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 350,
        "y": 640,
        "wires": []
    },
    {
        "id": "008d0f8c6ef1132f",
        "type": "ui_text",
        "z": "0277478f1e68b0ce",
        "group": "de51837b8b377b3b",
        "order": 1,
        "width": 12,
        "height": 1,
        "name": "reservation",
        "label": "Libre",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 130,
        "y": 720,
        "wires": []
    },
    {
        "id": "ea41ab0465f47990",
        "type": "ui_text",
        "z": "0277478f1e68b0ce",
        "group": "eb521a47e9a8db09",
        "order": 1,
        "width": 12,
        "height": 6,
        "name": "logs",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 350,
        "y": 800,
        "wires": []
    },
    {
        "id": "b2adb1c024dc31f8",
        "type": "inject",
        "z": "0277478f1e68b0ce",
        "name": "logs_injector",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "20/12 10:43 Pierre Paul",
        "payloadType": "str",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "ea41ab0465f47990"
            ]
        ]
    },
    {
        "id": "9b88fd4b128fc57c",
        "type": "ui_text",
        "z": "0277478f1e68b0ce",
        "group": "f36af4e5677b5672",
        "order": 1,
        "width": 12,
        "height": 1,
        "name": "gps_location",
        "label": "Localisation détectée",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 370,
        "y": 880,
        "wires": []
    },
    {
        "id": "6a6730ad1b5f4f13",
        "type": "inject",
        "z": "0277478f1e68b0ce",
        "name": "gps_injector",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Rue du cheval blanc, 4000 Liège",
        "payloadType": "str",
        "x": 150,
        "y": 880,
        "wires": [
            [
                "9b88fd4b128fc57c"
            ]
        ]
    },
    {
        "id": "f7d333af7d00a920",
        "type": "debug",
        "z": "0277478f1e68b0ce",
        "name": "mosquitto_debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 1240,
        "wires": []
    },
    {
        "id": "93578839b4841675",
        "type": "mqtt in",
        "z": "0277478f1e68b0ce",
        "name": "hello",
        "topic": "smartoffice/2/+/hello",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9c09494ed61fa6c9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 1020,
        "wires": [
            [
                "f7d333af7d00a920"
            ]
        ]
    },
    {
        "id": "c5c99200d4be6aee",
        "type": "mqtt in",
        "z": "0277478f1e68b0ce",
        "name": "get_temperature",
        "topic": "smartoffice/2/+/temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9c09494ed61fa6c9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 1100,
        "wires": [
            [
                "f7d333af7d00a920"
            ]
        ]
    },
    {
        "id": "dc64d5a8f07b8a51",
        "type": "mqtt in",
        "z": "0277478f1e68b0ce",
        "name": "get_light_sensor",
        "topic": "smartoffice/2/+/light_sensor",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9c09494ed61fa6c9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 1180,
        "wires": [
            [
                "f7d333af7d00a920"
            ]
        ]
    },
    {
        "id": "e6c2b49c82e472ec",
        "type": "mqtt in",
        "z": "0277478f1e68b0ce",
        "name": "get_sound_sensor",
        "topic": "smartoffice/2/+/sound_sensor",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9c09494ed61fa6c9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 1260,
        "wires": [
            [
                "f7d333af7d00a920"
            ]
        ]
    },
    {
        "id": "482f68d72f3e71f6",
        "type": "mqtt in",
        "z": "0277478f1e68b0ce",
        "name": "get_location",
        "topic": "smartoffice/2/+/gps",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9c09494ed61fa6c9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 1340,
        "wires": [
            [
                "f7d333af7d00a920"
            ]
        ]
    },
    {
        "id": "50c67b457275e78e",
        "type": "mqtt in",
        "z": "0277478f1e68b0ce",
        "name": "get_rfid",
        "topic": "smartoffice/2/+/rfid",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9c09494ed61fa6c9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 1420,
        "wires": [
            [
                "f7d333af7d00a920"
            ]
        ]
    },
    {
        "id": "a147a8a9cc0a78fb",
        "type": "function",
        "z": "0277478f1e68b0ce",
        "name": "containsLink",
        "func": "msg.payload = \"http://192.168.167.178:8000/camera\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 560,
        "wires": [
            [
                "c502d1aa06ef84c8"
            ]
        ]
    },
    {
        "id": "c502d1aa06ef84c8",
        "type": "ui_template",
        "z": "0277478f1e68b0ce",
        "group": "6d9ac2ca21f48ee4",
        "name": "redirect",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n            if (msg && msg.payload) {\n                window.open(msg.payload, '_blank');\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 560,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "4c27675628385ea0",
        "type": "ui_text",
        "z": "4e821b48bbd42ca3",
        "group": "1760465bb1ca33bd",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "title",
        "label": "Vue d'ensemble",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "32",
        "color": "#ffffff",
        "x": 130,
        "y": 60,
        "wires": []
    },
    {
        "id": "55b5a88e854315aa",
        "type": "ui_button",
        "z": "4e821b48bbd42ca3",
        "g": "50484f8edde3dcf6",
        "name": "rpi1",
        "group": "841582caaa17523e",
        "order": 2,
        "width": 8,
        "height": 1,
        "passthru": false,
        "label": "290A",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "redirect1",
        "payloadType": "global",
        "topic": "",
        "topicType": "str",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "a91a3199ac6a18da",
                "209054f98f416386",
                "a580835a1833e887"
            ]
        ]
    },
    {
        "id": "a91a3199ac6a18da",
        "type": "ui_text",
        "z": "4e821b48bbd42ca3",
        "g": "50484f8edde3dcf6",
        "group": "841582caaa17523e",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "is_active",
        "label": "actif",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#33d17a",
        "x": 360,
        "y": 180,
        "wires": []
    },
    {
        "id": "209054f98f416386",
        "type": "ui_text",
        "z": "4e821b48bbd42ca3",
        "g": "50484f8edde3dcf6",
        "group": "841582caaa17523e",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "is_free",
        "label": "occupé",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#e01b24",
        "x": 350,
        "y": 240,
        "wires": []
    },
    {
        "id": "68e0cfa4b06db715",
        "type": "ui_ui_control",
        "z": "4e821b48bbd42ca3",
        "g": "50484f8edde3dcf6",
        "name": "",
        "events": "change",
        "x": 720,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "a580835a1833e887",
        "type": "change",
        "z": "4e821b48bbd42ca3",
        "g": "50484f8edde3dcf6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"RPI\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 180,
        "wires": [
            [
                "68e0cfa4b06db715"
            ]
        ]
    },
    {
        "id": "5588a030b4ba3054",
        "type": "ui_button",
        "z": "4e821b48bbd42ca3",
        "d": true,
        "g": "829459fd4bc2bd59",
        "name": "rpi2",
        "group": "841582caaa17523e",
        "order": 7,
        "width": 8,
        "height": 1,
        "passthru": false,
        "label": "290C",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "redirect1",
        "payloadType": "global",
        "topic": "",
        "topicType": "str",
        "x": 150,
        "y": 360,
        "wires": [
            [
                "4a0e9bc2ee73a43b",
                "99e8dec59f4301b0",
                "3244fdb1a10c6c55"
            ]
        ]
    },
    {
        "id": "4a0e9bc2ee73a43b",
        "type": "ui_text",
        "z": "4e821b48bbd42ca3",
        "d": true,
        "g": "829459fd4bc2bd59",
        "group": "841582caaa17523e",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "is_active",
        "label": "innactif",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#c01c28",
        "x": 360,
        "y": 360,
        "wires": []
    },
    {
        "id": "99e8dec59f4301b0",
        "type": "ui_text",
        "z": "4e821b48bbd42ca3",
        "d": true,
        "g": "829459fd4bc2bd59",
        "group": "841582caaa17523e",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "is_free",
        "label": "libre",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#57e389",
        "x": 350,
        "y": 420,
        "wires": []
    },
    {
        "id": "1a334ccfcf23875f",
        "type": "ui_ui_control",
        "z": "4e821b48bbd42ca3",
        "d": true,
        "g": "829459fd4bc2bd59",
        "name": "",
        "events": "change",
        "x": 720,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "3244fdb1a10c6c55",
        "type": "change",
        "z": "4e821b48bbd42ca3",
        "d": true,
        "g": "829459fd4bc2bd59",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"RPI\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 360,
        "wires": [
            [
                "1a334ccfcf23875f"
            ]
        ]
    },
    {
        "id": "ef5500a5e12cb9c4",
        "type": "ui_button",
        "z": "4e821b48bbd42ca3",
        "d": true,
        "g": "cd243a0843f64ae7",
        "name": "rpi3",
        "group": "841582caaa17523e",
        "order": 12,
        "width": 8,
        "height": 1,
        "passthru": false,
        "label": "1020292",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "black",
        "icon": "",
        "payload": "redirect1",
        "payloadType": "global",
        "topic": "",
        "topicType": "str",
        "x": 150,
        "y": 540,
        "wires": [
            [
                "803591f4887b5365",
                "d01c87dadb6b1f01",
                "70fc72c1310dd2e9"
            ]
        ]
    },
    {
        "id": "803591f4887b5365",
        "type": "ui_text",
        "z": "4e821b48bbd42ca3",
        "d": true,
        "g": "cd243a0843f64ae7",
        "group": "841582caaa17523e",
        "order": 15,
        "width": 0,
        "height": 0,
        "name": "is_active",
        "label": "actif",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#33d17a",
        "x": 360,
        "y": 540,
        "wires": []
    },
    {
        "id": "d01c87dadb6b1f01",
        "type": "ui_text",
        "z": "4e821b48bbd42ca3",
        "d": true,
        "g": "cd243a0843f64ae7",
        "group": "841582caaa17523e",
        "order": 14,
        "width": 0,
        "height": 0,
        "name": "is_free",
        "label": "pas de local associé",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#f9f06b",
        "x": 350,
        "y": 600,
        "wires": []
    },
    {
        "id": "b67d5e6402ba9e62",
        "type": "ui_ui_control",
        "z": "4e821b48bbd42ca3",
        "d": true,
        "g": "cd243a0843f64ae7",
        "name": "",
        "events": "change",
        "x": 720,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "70fc72c1310dd2e9",
        "type": "change",
        "z": "4e821b48bbd42ca3",
        "d": true,
        "g": "cd243a0843f64ae7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"RPI\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 540,
        "wires": [
            [
                "b67d5e6402ba9e62"
            ]
        ]
    },
    {
        "id": "fb85b18a99c3394a",
        "type": "ui_gauge",
        "z": "4e821b48bbd42ca3",
        "g": "52529d8d7b615ffa",
        "name": "co_quantity",
        "group": "7fda8290ea03273e",
        "order": 2,
        "width": 8,
        "height": 6,
        "gtype": "donut",
        "title": "Quantité de CO",
        "label": "",
        "format": "{{value}} (190 µg/m3)",
        "min": 0,
        "max": "200",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "50",
        "seg2": "100",
        "diff": false,
        "className": "",
        "x": 1150,
        "y": 520,
        "wires": []
    },
    {
        "id": "f032958d3bcb43c7",
        "type": "ui_gauge",
        "z": "4e821b48bbd42ca3",
        "d": true,
        "g": "52529d8d7b615ffa",
        "name": "air_quality",
        "group": "7fda8290ea03273e",
        "order": 3,
        "width": 3,
        "height": 1,
        "gtype": "donut",
        "title": "Qualité de l'air",
        "label": "",
        "format": "{{value}}",
        "min": 0,
        "max": "200",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ffa348"
        ],
        "seg1": "50",
        "seg2": "100",
        "diff": false,
        "className": "",
        "x": 1150,
        "y": 600,
        "wires": []
    },
    {
        "id": "1123a8fd972228e4",
        "type": "inject",
        "z": "4e821b48bbd42ca3",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Rue du cheval blanc, 4000 Liège",
        "payloadType": "str",
        "x": 910,
        "y": 160,
        "wires": [
            [
                "3bc6f0b95980261e",
                "eb17202416c7c47c",
                "990b135bf2ec1184"
            ]
        ]
    },
    {
        "id": "2b2f7c601b02fc11",
        "type": "ui_text",
        "z": "4e821b48bbd42ca3",
        "group": "8753015cdcb44cc3",
        "order": 1,
        "width": 16,
        "height": 1,
        "name": "address",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "32",
        "color": "#ffffff",
        "x": 1720,
        "y": 160,
        "wires": []
    },
    {
        "id": "7d7db317f38e1625",
        "type": "ui_worldmap",
        "z": "4e821b48bbd42ca3",
        "group": "8753015cdcb44cc3",
        "order": 2,
        "width": 16,
        "height": 5,
        "name": "",
        "lat": "50.6418143",
        "lon": "5.5725594483456655",
        "zoom": "18",
        "layer": "OSMC",
        "cluster": "",
        "maxage": "",
        "usermenu": "hide",
        "layers": "hide",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "true",
        "hiderightclick": "true",
        "coords": "none",
        "showgrid": "false",
        "showruler": "false",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "overlist": "DR",
        "maplist": "OSMC",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 1420,
        "y": 240,
        "wires": []
    },
    {
        "id": "2dfae8b7e7686a90",
        "type": "mqtt in",
        "z": "4e821b48bbd42ca3",
        "name": "get_location",
        "topic": "smartoffice/2/+/gps",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9c09494ed61fa6c9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 910,
        "y": 240,
        "wires": [
            [
                "96da40a1ccfe7227"
            ]
        ]
    },
    {
        "id": "3bc6f0b95980261e",
        "type": "http request",
        "z": "4e821b48bbd42ca3",
        "name": "getAddressFromGpsSensor",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.geoapify.com/v1/geocode/reverse?lat=50.641780905467826&lon=5.572511534949572&apiKey=deeb5f3960dc4cf78c576f97f9ad146f",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1180,
        "y": 160,
        "wires": [
            [
                "83e04dd130ea4f2a"
            ]
        ]
    },
    {
        "id": "83e04dd130ea4f2a",
        "type": "function",
        "z": "4e821b48bbd42ca3",
        "name": "formatDataFromApi",
        "func": "var data = JSON.parse(msg.payload);\n\nmsg.payload = data.features[0].properties.formatted;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 160,
        "wires": [
            [
                "2b2f7c601b02fc11"
            ]
        ]
    },
    {
        "id": "eb17202416c7c47c",
        "type": "function",
        "z": "4e821b48bbd42ca3",
        "name": "injectCoordinatesToWorldmap",
        "func": "msg.payload = {\n    name: \"SmartOffice\",\n    lat: 50.6418143,         // Latitude dynamique\n    lon: 5.5725594483456655, // Longitude dynamique\n    icon: \"fa-map-marker\",   // Icône à utiliser sur la carte\n    fillColor: \"#ff0000\",    // Couleur de remplissage (optionnel)\n    color: \"#ff0000\"         // Couleur du contour (optionnel)\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 240,
        "wires": [
            [
                "7d7db317f38e1625"
            ]
        ]
    },
    {
        "id": "990b135bf2ec1184",
        "type": "function",
        "z": "4e821b48bbd42ca3",
        "name": "storeCoordinatesInContext",
        "func": "//var lat = msg.payload.latitude;  // Assurez-vous que le payload contient latitude\n//var lon = msg.payload.longitude; // Assurez-vous que le payload contient longitude\nvar lat = 50.641780905467826\nvar lon = 5.572511534949572\nglobal.set(\"coordinates\", { latitude: lat, longitude: lon });\n\nmsg.payload = \"Coordinates stored: Latitude = \" + lat + \", Longitude = \" + lon;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 340,
        "wires": [
            [
                "bbae968c8ad7c12f"
            ]
        ]
    },
    {
        "id": "bbae968c8ad7c12f",
        "type": "debug",
        "z": "4e821b48bbd42ca3",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 340,
        "wires": []
    },
    {
        "id": "cb1b78fea3a07f49",
        "type": "http request",
        "z": "4e821b48bbd42ca3",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1170,
        "y": 780,
        "wires": [
            [
                "c76811d58c34c5d6"
            ]
        ]
    },
    {
        "id": "10e719f75a3e1ff9",
        "type": "function",
        "z": "4e821b48bbd42ca3",
        "name": "injectApiParameters",
        "func": "var coordinates = global.get(\"coordinates\");\n\nif (coordinates && coordinates.latitude && coordinates.longitude) {\n    var lat = coordinates.latitude;\n    var lon = coordinates.longitude;\n\n    msg.url = `https://air-quality-api.open-meteo.com/v1/air-quality?latitude=${lat}&longitude=${lon}&hourly=pm10,pm2_5&timezone=auto`;\n    return msg;\n} else {\n    node.error(\"Coordinates not found in global context\", msg);\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 780,
        "wires": [
            [
                "cb1b78fea3a07f49"
            ]
        ]
    },
    {
        "id": "a960b3602a6a3cd1",
        "type": "inject",
        "z": "4e821b48bbd42ca3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.3",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 670,
        "y": 780,
        "wires": [
            [
                "10e719f75a3e1ff9"
            ]
        ]
    },
    {
        "id": "c76811d58c34c5d6",
        "type": "function",
        "z": "4e821b48bbd42ca3",
        "name": "checkAirQuality",
        "func": "try {\n    let payloadObject = JSON.parse(msg.payload);\n\n    if (payloadObject && payloadObject.elevation) {\n        let elevation = payloadObject.elevation;\n        msg.payload = elevation;\n    } else {\n        msg.payload = \"Elevation data not available.\";\n    }\n} catch (error) {\n    msg.payload = \"Invalid JSON data.\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 780,
        "wires": [
            [
                "fb85b18a99c3394a",
                "388a14b9ed4aeb4e"
            ]
        ]
    },
    {
        "id": "388a14b9ed4aeb4e",
        "type": "function",
        "z": "4e821b48bbd42ca3",
        "name": "convertAirQualityIntoString",
        "func": "if (msg.payload >= 0 && msg.payload <= 50) {\n    msg.payload = \"Bonne\";\n} else if (msg.payload > 50 && msg.payload <= 100) {\n    msg.payload = \"Modérée\";\n} else if (msg.payload > 100) {\n    msg.payload = \"Mauvaise\";\n} else {\n    msg.payload = \"Valeur invalide\";\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 780,
        "wires": [
            [
                "f032958d3bcb43c7",
                "4f7dd4b144e7f41d"
            ]
        ]
    },
    {
        "id": "4f7dd4b144e7f41d",
        "type": "ui_text",
        "z": "4e821b48bbd42ca3",
        "g": "52529d8d7b615ffa",
        "group": "7fda8290ea03273e",
        "order": 1,
        "width": 8,
        "height": 6,
        "name": "air_quality",
        "label": "Qualité globale de l'air",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "30",
        "color": "#ffffff",
        "x": 1250,
        "y": 600,
        "wires": []
    },
    {
        "id": "96da40a1ccfe7227",
        "type": "debug",
        "z": "4e821b48bbd42ca3",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 440,
        "wires": []
    },
    {
        "id": "ef266be67d609a53",
        "type": "ui_text",
        "z": "4db1d4819dfea4ef",
        "group": "821b48d3e4d5beb6",
        "order": 1,
        "width": 26,
        "height": 1,
        "name": "title",
        "label": "Réservation",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "32",
        "color": "#ffffff",
        "x": 130,
        "y": 60,
        "wires": []
    },
    {
        "id": "b54ecb6b4b720a44",
        "type": "ui_button",
        "z": "4db1d4819dfea4ef",
        "name": "button_book",
        "group": "821b48d3e4d5beb6",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Réserver",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 570,
        "y": 60,
        "wires": [
            [
                "64aebe12c013e608"
            ]
        ]
    },
    {
        "id": "982bdb0a083bd7bd",
        "type": "ui_ui_control",
        "z": "4db1d4819dfea4ef",
        "name": "",
        "events": "change",
        "x": 940,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "64aebe12c013e608",
        "type": "change",
        "z": "4db1d4819dfea4ef",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"1Reservation\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 60,
        "wires": [
            [
                "982bdb0a083bd7bd"
            ]
        ]
    },
    {
        "id": "5d4a41df373f227d",
        "type": "mongodb4",
        "z": "4db1d4819dfea4ef",
        "clientNode": "08886a7cd4dd855e",
        "mode": "collection",
        "collection": "reservation",
        "operation": "find",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "find.reservation",
        "x": 540,
        "y": 420,
        "wires": [
            [
                "3df8284650839b33"
            ]
        ]
    },
    {
        "id": "e620b61b5850c836",
        "type": "inject",
        "z": "4db1d4819dfea4ef",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 260,
        "wires": [
            [
                "547d7b722673664e"
            ]
        ]
    },
    {
        "id": "547d7b722673664e",
        "type": "function",
        "z": "4db1d4819dfea4ef",
        "name": "set payload",
        "func": "const query = { };\n\nmsg.payload = [query];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 340,
        "wires": [
            [
                "5d4a41df373f227d"
            ]
        ]
    },
    {
        "id": "d2d764f24a97ca5f",
        "type": "function",
        "z": "4db1d4819dfea4ef",
        "name": "add_action_and_format_date",
        "func": "let reservations = msg.payload;\n\nif (Array.isArray(reservations)) {\n    reservations.forEach(item => {\n        if (item.start_time) {\n            let date = new Date(item.start_time); // Convertir en objet Date\n            item.start_time = date.toLocaleString('fr-FR', {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n            }); // Reformater en une date lisible\n        }\n        if (item.end_time) {\n            let date = new Date(item.end_time); // Convertir en objet Date\n            item.end_time = date.toLocaleString('fr-FR', {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n            }); // Reformater en une date lisible\n        }\n    });\n}\nreservations = reservations.map(reservation => {\n    reservation.action = `<a href=\"/cancel_booking?id=${reservation._id}\">Annuler</a>`;\n    return reservation;\n});\n\n\nmsg.payload = reservations;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 420,
        "wires": [
            [
                "988308436198a81e"
            ]
        ]
    },
    {
        "id": "988308436198a81e",
        "type": "ui_template",
        "z": "4db1d4819dfea4ef",
        "group": "821b48d3e4d5beb6",
        "name": "",
        "order": 4,
        "width": 29,
        "height": 6,
        "format": "<table>\n    <thead>\n        <tr>\n            <th>Client</th>\n            <th>Local</th>\n            <th>Début</th>\n            <th>Fin</th>\n            <th>Action</th>\n        </tr>\n    </thead>\n    <tbody id=\"table-body\">\n        <tr ng-repeat=\"row in msg.payload\">\n            <td>{{ row.client_email }}</td>\n            <td>{{ row.premise_name }}</td>\n            <td>{{ row.start_time }}</td>\n            <td>{{ row.end_time }}</td>\n            <td ng-bind-html=\"row.action\"></td>\n        </tr>\n    </tbody>\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1200,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "3df8284650839b33",
        "type": "function",
        "z": "4db1d4819dfea4ef",
        "name": "joinDataToHaveClientAndPremise",
        "func": "let reservations = msg.payload;\nglobal.set('reservationData', reservations)\nlet clients = global.get('clientData');\nlet premises = global.get('premiseData');\n\n// Ajouter email et name aux objets de reservation\nreservations.forEach(reservation => {\n    // Trouver le client correspondant à id_client\n    let client = clients.find(client => reservation.id_client && client._id && client._id.toString() === reservation.id_client.toString());\n    if (client) {\n        reservation.client_email = client.email;\n    } else {\n        reservation.client_email = null; // ou une valeur par défaut\n    }\n\n    // Trouver la premise correspondant à id_premise\n    let premise = premises.find(premise => reservation.id_premise && premise._id && premise._id.toString() === reservation.id_premise.toString());\n    if (premise) {\n        reservation.premise_name = premise.name;\n    } else {\n        reservation.premise_name = null; // ou une valeur par défaut\n    }\n});\n\nmsg.payload = reservations;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 420,
        "wires": [
            [
                "d2d764f24a97ca5f"
            ]
        ]
    },
    {
        "id": "5d123201b01615c5",
        "type": "http in",
        "z": "4db1d4819dfea4ef",
        "name": "cancel_booking_request",
        "url": "/cancel_booking",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 610,
        "y": 340,
        "wires": [
            [
                "87b77c671fe9d809"
            ]
        ]
    },
    {
        "id": "87b77c671fe9d809",
        "type": "function",
        "z": "4db1d4819dfea4ef",
        "name": "cancel_reservation",
        "func": "let reservations = global.get('reservationData');\n\nlet reservationId = msg.req.query.id;\n\nlet reservation = reservations.find(reservation => reservation._id.toString() === reservationId);\n\ndelete reservation.action;\ndelete reservation.premise_name;\ndelete reservation.client_email;\ndelete reservation.start_time;\ndelete reservation.end_time;\n\nif (reservation) {\n    msg.payload = reservation;\n} else {\n    msg.payload = { message: \"Réservation non trouvée\" };\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 340,
        "wires": [
            [
                "f1fd48d9d3b2017d"
            ]
        ]
    },
    {
        "id": "1968917eb0d9146d",
        "type": "function",
        "z": "4db1d4819dfea4ef",
        "name": "redirect_to_reservation_page",
        "func": "msg.statusCode = 302;\nmsg.headers = { location: \"/#!/1\" }; // Lien vers lequel rediriger\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 340,
        "wires": [
            [
                "c8bddb85ddc80226"
            ]
        ]
    },
    {
        "id": "c8bddb85ddc80226",
        "type": "http response",
        "z": "4db1d4819dfea4ef",
        "name": "http_response",
        "statusCode": "",
        "headers": {},
        "x": 1620,
        "y": 340,
        "wires": []
    },
    {
        "id": "f1fd48d9d3b2017d",
        "type": "mongodb4",
        "z": "4db1d4819dfea4ef",
        "clientNode": "08886a7cd4dd855e",
        "mode": "collection",
        "collection": "reservation",
        "operation": "deleteOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "remove_reservation",
        "x": 1120,
        "y": 340,
        "wires": [
            [
                "1968917eb0d9146d"
            ]
        ]
    },
    {
        "id": "be0b18b31c0adf57",
        "type": "ui_form",
        "z": "df1a303ec9e1b819",
        "name": "booking_form",
        "label": "",
        "group": "ca6e864468baaad4",
        "order": 2,
        "width": 23,
        "height": 10,
        "options": [
            {
                "label": "Utilisateur",
                "value": "id_client",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Local",
                "value": "id_premise",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Début",
                "value": "start_date",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "Heure",
                "value": "start_time",
                "type": "time",
                "required": true,
                "rows": null
            },
            {
                "label": "Fin",
                "value": "end_date",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "Heure",
                "value": "end_time",
                "type": "time",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id_client": "",
            "id_premise": "",
            "start_date": "",
            "start_time": "",
            "end_date": "",
            "end_time": ""
        },
        "payload": "",
        "submit": "Réserver",
        "cancel": "Annuler",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 140,
        "y": 360,
        "wires": [
            [
                "c7c3bb6395593a9c"
            ]
        ]
    },
    {
        "id": "f7b193dda725f7f2",
        "type": "ui_text",
        "z": "df1a303ec9e1b819",
        "group": "ca6e864468baaad4",
        "order": 1,
        "width": 23,
        "height": 1,
        "name": "title",
        "label": "Réservation > ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "32",
        "color": "#ffffff",
        "x": 370,
        "y": 80,
        "wires": []
    },
    {
        "id": "b182437a122655b4",
        "type": "inject",
        "z": "df1a303ec9e1b819",
        "name": "reserver",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.4",
        "topic": "",
        "payload": "Réserver",
        "payloadType": "str",
        "x": 160,
        "y": 80,
        "wires": [
            [
                "f7b193dda725f7f2",
                "665db45f4d7359c0"
            ]
        ]
    },
    {
        "id": "55ea4423867b72a4",
        "type": "ui_dropdown",
        "z": "df1a303ec9e1b819",
        "d": true,
        "name": "clients_dropdown",
        "label": "",
        "tooltip": "",
        "place": "Choisir un client",
        "group": "ca6e864468baaad4",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "payload",
        "topicType": "msg",
        "className": "",
        "x": 370,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "665db45f4d7359c0",
        "type": "function",
        "z": "df1a303ec9e1b819",
        "name": "getClients",
        "func": "let data = global.get('clientData');\nmsg.options = data.map(client => client.email);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 220,
        "wires": [
            [
                "55ea4423867b72a4"
            ]
        ]
    },
    {
        "id": "c7c3bb6395593a9c",
        "type": "function",
        "z": "df1a303ec9e1b819",
        "name": "prepareObject",
        "func": "// Récupérer le message payload\nlet data = msg.payload;\n\n// Récupérer les données client depuis la variable globale\nlet clientData = global.get('clientData');\nlet premiseData = global.get('premiseData');\n\n// Regrouper start_date et start_time dans une nouvelle clé start_datetime\nlet startDate = new Date(data.start_date);\nlet startTime = new Date(data.start_time);\nstartDate.setHours(startTime.getHours());\nstartDate.setMinutes(startTime.getMinutes());\nstartDate.setSeconds(startTime.getSeconds());\ndata.start_time = startDate.toISOString(); // Formater la date résultante\n\n// Regrouper end_date et end_time dans une nouvelle clé end_datetime\nlet endDate = new Date(data.end_date);\nlet endTime = new Date(data.end_time);\nendDate.setHours(endTime.getHours());\nendDate.setMinutes(endTime.getMinutes());\nendDate.setSeconds(endTime.getSeconds());\ndata.end_time = endDate.toISOString(); // Formater la date résultante\n\n// Remplacer id_client par _id du client correspondant\nlet client = clientData.find(client => client.email === data.id_client);\nif (client) {\n    data.id_client = client._id;\n} else {\n    // Si aucun client n'est trouvé, garder l'ID initial ou gérer l'erreur\n    data.id_client = null;\n}\n\nlet premise = premiseData.find(premise => premise.name === data.id_premise);\nif (client) {\n    data.id_premise = premise._id;\n} else {\n    // Si aucun client n'est trouvé, garder l'ID initial ou gérer l'erreur\n    data.id_premise = null;\n}\n\n// Supprimer les anciens champs\ndelete data.start_date;\ndelete data.end_date;\n\nmsg.payload = data;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 360,
        "wires": [
            [
                "e595840b287591df"
            ]
        ]
    },
    {
        "id": "e595840b287591df",
        "type": "mongodb4",
        "z": "df1a303ec9e1b819",
        "clientNode": "08886a7cd4dd855e",
        "mode": "collection",
        "collection": "reservation",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "insertReservation",
        "x": 550,
        "y": 360,
        "wires": [
            [
                "cc714ee28301d5b1",
                "34e2bb5e1ea5df41"
            ]
        ]
    },
    {
        "id": "cc714ee28301d5b1",
        "type": "function",
        "z": "df1a303ec9e1b819",
        "name": "redirect_to_reservation_page",
        "func": "msg.payload = {\"tab\":\"Réservation\"};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 360,
        "wires": [
            [
                "0b9cfdfd3387f444"
            ]
        ]
    },
    {
        "id": "0b9cfdfd3387f444",
        "type": "ui_ui_control",
        "z": "df1a303ec9e1b819",
        "name": "change_tab",
        "events": "all",
        "x": 1090,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "34e2bb5e1ea5df41",
        "type": "debug",
        "z": "df1a303ec9e1b819",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 260,
        "wires": []
    },
    {
        "id": "065d264aa47c211a",
        "type": "ui_text",
        "z": "d959e01e9af70966",
        "group": "b255ced8c894f4f0",
        "order": 1,
        "width": 33,
        "height": 1,
        "name": "title",
        "label": "Support",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "32",
        "color": "#ffffff",
        "x": 110,
        "y": 60,
        "wires": []
    },
    {
        "id": "0822e0a08a81e9e3",
        "type": "ui_button",
        "z": "d959e01e9af70966",
        "name": "support_link_button",
        "group": "b255ced8c894f4f0",
        "order": 5,
        "width": 34,
        "height": 4,
        "passthru": false,
        "label": "Accéder au support WebEx",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "1e4cc66b57ed2b56"
            ]
        ]
    },
    {
        "id": "1e4cc66b57ed2b56",
        "type": "function",
        "z": "d959e01e9af70966",
        "name": "containsLink",
        "func": "msg.payload = \"https://web.webex.com/spaces/aHR0cHM6Ly9jb252LWsud2J4Mi5jb20vY29udmVyc2F0aW9uL2FwaS92MS9jb252ZXJzYXRpb25zLzZmNTg2ODcwLThkMzYtMTFlZi05NGM2LWZiYThmZGViNmE3ZA==\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 140,
        "wires": [
            [
                "c26166e6305d6f8e"
            ]
        ]
    },
    {
        "id": "c26166e6305d6f8e",
        "type": "ui_template",
        "z": "d959e01e9af70966",
        "group": "b255ced8c894f4f0",
        "name": "redirect",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n            if (msg && msg.payload) {\n                window.open(msg.payload, '_blank');\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 580,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "22b93b9e152a72e5",
        "type": "ui_text",
        "z": "0ab432dc59b6d0a3",
        "group": "f87d496c91fac1c3",
        "order": 1,
        "width": 20,
        "height": 1,
        "name": "title",
        "label": "Logs",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "32",
        "color": "#ffffff",
        "x": 110,
        "y": 60,
        "wires": []
    },
    {
        "id": "67e4568a7a3501fe",
        "type": "ui_date_picker",
        "z": "0ab432dc59b6d0a3",
        "name": "",
        "label": "Rechercher par date",
        "group": "f87d496c91fac1c3",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 640,
        "y": 120,
        "wires": [
            [
                "a657d51e759ff876"
            ]
        ]
    },
    {
        "id": "eb75d147338e0d5e",
        "type": "mongodb4",
        "z": "0ab432dc59b6d0a3",
        "clientNode": "08886a7cd4dd855e",
        "mode": "collection",
        "collection": "log",
        "operation": "find",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "find.logs",
        "x": 540,
        "y": 240,
        "wires": [
            [
                "7878dc4f22923344"
            ]
        ]
    },
    {
        "id": "46dd09ca7b7ac7c8",
        "type": "inject",
        "z": "0ab432dc59b6d0a3",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 240,
        "wires": [
            [
                "62b35b4144bc0c52"
            ]
        ]
    },
    {
        "id": "62b35b4144bc0c52",
        "type": "function",
        "z": "0ab432dc59b6d0a3",
        "name": "set payload",
        "func": "const query = { };\n\nmsg.payload = [query];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 240,
        "wires": [
            [
                "eb75d147338e0d5e"
            ]
        ]
    },
    {
        "id": "5df8d8e55bcfaa12",
        "type": "ui_template",
        "z": "0ab432dc59b6d0a3",
        "group": "f87d496c91fac1c3",
        "name": "",
        "order": 6,
        "width": 29,
        "height": 7,
        "format": "<table>\n    <thead>\n        <tr>\n            <th>Id</th>\n            <th>Local</th>\n            <th>Topic</th>\n            <th>Date</th>\n            <th>Valeur</th>\n        </tr>\n    </thead>\n    <tbody id=\"table-body\">\n        <tr ng-repeat=\"row in msg.payload\">\n            <td>{{ row._id }}</td>\n            <td>{{ row.premise_name }}</td>\n            <td>{{ row.topic }}</td>\n            <td>{{ row.readableDate }}</td>\n            <td>{{ row.value_log }}</td>\n        </tr>\n    </tbody>\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1260,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "2cf404800ccde71e",
        "type": "function",
        "z": "0ab432dc59b6d0a3",
        "name": "set payload",
        "func": "let data = msg.payload;\n\nif (Array.isArray(data)) {\n    data.forEach(item => {\n        if (item.date_log) {\n            let date = new Date(item.date_log);\n            item.readableDate = date.toLocaleString('fr-FR', {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n            });\n        }\n    });\n}\n\n\nif (Array.isArray(data)) {\n    flow.set('mongodbData', data);\n}\n\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 240,
        "wires": [
            [
                "5df8d8e55bcfaa12"
            ]
        ]
    },
    {
        "id": "a657d51e759ff876",
        "type": "function",
        "z": "0ab432dc59b6d0a3",
        "name": "sortByDate",
        "func": "// Récupérer les données depuis le contexte\nlet data = flow.get(\"mongodbData\");\n\n// Vérifier si 'data' est bien un tableau\nif (!Array.isArray(data)) {\n    msg.payload = { status: \"mongodbData is not an array or not found\" };\n    return msg;  // Quitte tôt si 'data' n'est pas un tableau\n}\n\nlet timestamp = msg.payload; \n\nlet date = new Date(timestamp);\nlet targetDate = date.toISOString().split('T')[0]; // Extraire uniquement la partie 'YYYY-MM-DD'\n\n// Filtrer les objets de 'data' dont \"date_log\" correspond à la même date\nlet filteredData = data.filter(item => {\n    let itemDate = new Date(item.date_log).toISOString().split('T')[0];\n    return itemDate === targetDate;\n});\n\nif (filteredData.length > 0) {\n    msg.payload = filteredData;\n} else {\n    msg.payload = { status: \"No matching data found\", data: data };\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 120,
        "wires": [
            [
                "5df8d8e55bcfaa12"
            ]
        ]
    },
    {
        "id": "7878dc4f22923344",
        "type": "function",
        "z": "0ab432dc59b6d0a3",
        "name": "joinDataToHavePremise",
        "func": "let logs = msg.payload;\nlet premises = global.get('premiseData');\n\n// Ajouter email et name aux objets de reservation\nlogs.forEach(log => {\n    // Trouver la premise correspondant à id_premise\n    let premise = premises.find(premise => premise._id.toString() === log.id_premise.toString());\n    if (premise) {\n        log.premise_name = premise.name;\n    } else {\n        log.premise_name = null; // ou une valeur par défaut\n    }\n});\n\nmsg.payload = logs;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 240,
        "wires": [
            [
                "2cf404800ccde71e"
            ]
        ]
    },
    {
        "id": "a12d5659ca6e4f67",
        "type": "ui_button",
        "z": "0ab432dc59b6d0a3",
        "name": "reset_logs",
        "group": "f87d496c91fac1c3",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Réinitialiser",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 300,
        "wires": [
            [
                "62b35b4144bc0c52"
            ]
        ]
    },
    {
        "id": "961826f4c996c896",
        "type": "ui_text",
        "z": "19da2f4cf4bf4170",
        "group": "b433e86cb98af344",
        "order": 1,
        "width": 26,
        "height": 1,
        "name": "title",
        "label": "Utilisateurs",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "32",
        "color": "#ffffff",
        "x": 90,
        "y": 180,
        "wires": []
    },
    {
        "id": "2511177c847c7df8",
        "type": "ui_button",
        "z": "19da2f4cf4bf4170",
        "name": "create_user",
        "group": "b433e86cb98af344",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Créer",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 530,
        "y": 180,
        "wires": [
            [
                "4c39ee51ddf3b1a6"
            ]
        ]
    },
    {
        "id": "ec687b3180687b6d",
        "type": "ui_ui_control",
        "z": "19da2f4cf4bf4170",
        "name": "",
        "events": "change",
        "x": 900,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "4c39ee51ddf3b1a6",
        "type": "change",
        "z": "19da2f4cf4bf4170",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"CreateUser\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 180,
        "wires": [
            [
                "ec687b3180687b6d"
            ]
        ]
    },
    {
        "id": "d2187ab358b627bf",
        "type": "mongodb4",
        "z": "19da2f4cf4bf4170",
        "clientNode": "08886a7cd4dd855e",
        "mode": "collection",
        "collection": "client",
        "operation": "find",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "find.clients",
        "x": 530,
        "y": 260,
        "wires": [
            [
                "a921be82d0c2c420"
            ]
        ]
    },
    {
        "id": "36cc1cb37ca35536",
        "type": "inject",
        "z": "19da2f4cf4bf4170",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 260,
        "wires": [
            [
                "5b027e2170cc7ef8",
                "9fc6d51011e61320"
            ]
        ]
    },
    {
        "id": "5b027e2170cc7ef8",
        "type": "function",
        "z": "19da2f4cf4bf4170",
        "name": "set payload",
        "func": "const query = { };\n\nmsg.payload = [query];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 260,
        "wires": [
            [
                "d2187ab358b627bf"
            ]
        ]
    },
    {
        "id": "a921be82d0c2c420",
        "type": "function",
        "z": "19da2f4cf4bf4170",
        "name": "add_action",
        "func": "let users = msg.payload;\n\nglobal.set('clientData', users);\n\nusers = users.map(user => {\n    user.action = `<a href=\"/delete_user?id=${user._id}\">Supprimer</a>`;\n    return user;\n});\n\n\nmsg.payload = users;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 260,
        "wires": [
            [
                "478210a64f28ad5c"
            ]
        ]
    },
    {
        "id": "478210a64f28ad5c",
        "type": "ui_template",
        "z": "19da2f4cf4bf4170",
        "group": "b433e86cb98af344",
        "name": "",
        "order": 4,
        "width": 29,
        "height": 6,
        "format": "<table>\n    <thead>\n        <tr>\n            <th>Id</th>\n            <th>Email</th>\n            <th>Prénom</th>\n            <th>Nom</th>\n            <th>Téléphone</th>\n            <th>Role</th>\n            <th>Action</th>\n        </tr>\n    </thead>\n    <tbody id=\"table-body\">\n        <tr ng-repeat=\"row in msg.payload\">\n            <td>{{ row._id }}</td>\n            <td>{{ row.email }}</td>\n            <td>{{ row.firstname }}</td>\n            <td>{{ row.name }}</td>\n            <td>{{ row.telephone }}</td>\n            <td>{{ row.role }}</td>\n            <td ng-bind-html=\"row.action\"></td>        </tr>\n    </tbody>\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1100,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "5ab0868f656e94ae",
        "type": "mongodb4",
        "z": "19da2f4cf4bf4170",
        "clientNode": "08886a7cd4dd855e",
        "mode": "collection",
        "collection": "premise",
        "operation": "find",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "find.premise",
        "x": 530,
        "y": 360,
        "wires": [
            [
                "192ca4dd97f406f7"
            ]
        ]
    },
    {
        "id": "9fc6d51011e61320",
        "type": "function",
        "z": "19da2f4cf4bf4170",
        "name": "set payload",
        "func": "const query = { };\n\nmsg.payload = [query];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 360,
        "wires": [
            [
                "5ab0868f656e94ae"
            ]
        ]
    },
    {
        "id": "192ca4dd97f406f7",
        "type": "function",
        "z": "19da2f4cf4bf4170",
        "name": "waitAndSend",
        "func": "global.set('premiseData', msg.payload);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "f540ca4c2be60134",
        "type": "ui_form",
        "z": "a71c83548b86d5cf",
        "name": "create_user_form",
        "label": "",
        "group": "600bf87db0283dac",
        "order": 3,
        "width": 23,
        "height": 1,
        "options": [
            {
                "label": "Email",
                "value": "email",
                "type": "email",
                "required": true,
                "rows": null
            },
            {
                "label": "Prénom",
                "value": "firstname",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Nom",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Mot de passe",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "Téléphone",
                "value": "telephone",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Role admin",
                "value": "role",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "RFID",
                "value": "rfid",
                "type": "number",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "email": "",
            "firstname": "",
            "name": "",
            "password": "",
            "telephone": "",
            "role": false,
            "rfid": ""
        },
        "payload": "",
        "submit": "Créer",
        "cancel": "Annuler",
        "topic": "payload",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 170,
        "y": 160,
        "wires": [
            [
                "027dbc9a9f236cce"
            ]
        ]
    },
    {
        "id": "2cedfe5448181f34",
        "type": "ui_text",
        "z": "a71c83548b86d5cf",
        "group": "600bf87db0283dac",
        "order": 1,
        "width": 23,
        "height": 1,
        "name": "title",
        "label": "Utilisateur > ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "32",
        "color": "#ffffff",
        "x": 370,
        "y": 60,
        "wires": []
    },
    {
        "id": "be608c14c998f1dc",
        "type": "inject",
        "z": "a71c83548b86d5cf",
        "name": "créer",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Créer",
        "payloadType": "str",
        "x": 150,
        "y": 60,
        "wires": [
            [
                "2cedfe5448181f34"
            ]
        ]
    },
    {
        "id": "aadfbbe2d1c83e76",
        "type": "mongodb4",
        "z": "a71c83548b86d5cf",
        "clientNode": "08886a7cd4dd855e",
        "mode": "collection",
        "collection": "client",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "createClient",
        "x": 690,
        "y": 160,
        "wires": [
            [
                "9b5ec61c8a1b1076",
                "ab2f3df19898e40e"
            ]
        ]
    },
    {
        "id": "027dbc9a9f236cce",
        "type": "function",
        "z": "a71c83548b86d5cf",
        "name": "prepareObject",
        "func": "let user = msg.payload;\n\nif (user.role === false) {\n    user.role = \"user\";\n} else if (user.role === true) {\n    user.role = \"admin\";\n}\n\nmsg.payload = user;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 160,
        "wires": [
            [
                "aadfbbe2d1c83e76"
            ]
        ]
    },
    {
        "id": "ab2f3df19898e40e",
        "type": "function",
        "z": "a71c83548b86d5cf",
        "name": "redirect_to_reservation_page",
        "func": "msg.payload = {\"tab\":\"Utilisateurs\"};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 160,
        "wires": [
            [
                "ac2484a266f7be90"
            ]
        ]
    },
    {
        "id": "ac2484a266f7be90",
        "type": "ui_ui_control",
        "z": "a71c83548b86d5cf",
        "name": "change_tab",
        "events": "all",
        "x": 1190,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "9b5ec61c8a1b1076",
        "type": "debug",
        "z": "a71c83548b86d5cf",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 100,
        "wires": []
    },
    {
        "id": "70df47423de0b885",
        "type": "ui_form",
        "z": "01557fa3c5d57cbe",
        "d": true,
        "name": "edit_user_form",
        "label": "",
        "group": "1e09fa150998fee1",
        "order": 6,
        "width": 34,
        "height": 7,
        "options": [
            {
                "label": "Email",
                "value": "email",
                "type": "email",
                "required": true,
                "rows": null
            },
            {
                "label": "Prénom",
                "value": "firstname",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Nom",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Mot de passe",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "Téléphone",
                "value": "telephone",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Role admin",
                "value": "role",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "RFID",
                "value": "rfid",
                "type": "number",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "email": "",
            "firstname": "",
            "name": "",
            "password": "",
            "telephone": "",
            "role": false,
            "rfid": ""
        },
        "payload": "",
        "submit": "Modifier",
        "cancel": "Annuler",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 720,
        "y": 300,
        "wires": [
            [
                "88cbe4022143dfab"
            ]
        ]
    },
    {
        "id": "3c43bb6eb20edbbc",
        "type": "ui_text",
        "z": "01557fa3c5d57cbe",
        "d": true,
        "group": "1e09fa150998fee1",
        "order": 1,
        "width": 24,
        "height": 1,
        "name": "title",
        "label": "Utilisateur > ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "32",
        "color": "#ffffff",
        "x": 350,
        "y": 40,
        "wires": []
    },
    {
        "id": "a83704f6176303df",
        "type": "inject",
        "z": "01557fa3c5d57cbe",
        "d": true,
        "name": "edit",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Modifier",
        "payloadType": "str",
        "x": 130,
        "y": 40,
        "wires": [
            [
                "3c43bb6eb20edbbc",
                "73a0b0e86d1ecfcd"
            ]
        ]
    },
    {
        "id": "254b9a8fdd1a2021",
        "type": "ui_button",
        "z": "01557fa3c5d57cbe",
        "name": "delete_button",
        "group": "1e09fa150998fee1",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Supprimer",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "{ \"url\": \"https://example.com\" }",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "73a0b0e86d1ecfcd",
        "type": "function",
        "z": "01557fa3c5d57cbe",
        "d": true,
        "name": "function 1",
        "func": "var searchId = global.get(\"user_id\");\n\nif (!searchId) {\n    return { payload: { error: \"Global variable 'searchId' is not set\" } };\n}\n\nvar query = { email: searchId };\n\nmsg.payload = [query];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 300,
        "wires": [
            [
                "63d2c5beb1139d43"
            ]
        ]
    },
    {
        "id": "63d2c5beb1139d43",
        "type": "mongodb4",
        "z": "01557fa3c5d57cbe",
        "d": true,
        "clientNode": "08886a7cd4dd855e",
        "mode": "collection",
        "collection": "client",
        "operation": "find",
        "output": "forEach",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "findWithId",
        "x": 500,
        "y": 300,
        "wires": [
            [
                "70df47423de0b885"
            ]
        ]
    },
    {
        "id": "b61235c8ef4235fa",
        "type": "mongodb4",
        "z": "01557fa3c5d57cbe",
        "d": true,
        "clientNode": "08886a7cd4dd855e",
        "mode": "collection",
        "collection": "client",
        "operation": "updateOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "edit",
        "x": 1170,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "88cbe4022143dfab",
        "type": "function",
        "z": "01557fa3c5d57cbe",
        "d": true,
        "name": "function 2",
        "func": "let formData = msg.payload;\n\nmsg.payload = {\n    \"query\": { \"email\": formData.email },\n    \"update\": { \n        \"$set\": {\n            \"firstname\": formData.firstname,\n            \"name\": formData.name,\n            \"password\": formData.password,\n            \"telephone\": formData.telephone,\n            \"role\": formData.role,\n            \"rfid\": formData.rfid\n        }\n    }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 300,
        "wires": [
            [
                "b61235c8ef4235fa"
            ]
        ]
    },
    {
        "id": "50702c252190167a",
        "type": "http in",
        "z": "01557fa3c5d57cbe",
        "name": "remove_user_request",
        "url": "/delete_user",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 400,
        "y": 480,
        "wires": [
            [
                "5c78dcafba76ebfd"
            ]
        ]
    },
    {
        "id": "5c78dcafba76ebfd",
        "type": "function",
        "z": "01557fa3c5d57cbe",
        "name": "remove_user_preparation",
        "func": "let users = global.get('clientData');\n\nlet userId = msg.req.query.id;\n\nlet user = users.find(user => user._id.toString() === userId);\ndelete user.action;\n\nif (user) {\n    msg.payload = user;\n} else {\n    msg.payload = { message: \"Utilisateur non trouvé\" };\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 480,
        "wires": [
            [
                "342a07ec23ace6e8"
            ]
        ]
    },
    {
        "id": "22835d4307fbe224",
        "type": "function",
        "z": "01557fa3c5d57cbe",
        "name": "redirect_to_clients_page",
        "func": "msg.statusCode = 302;\nmsg.headers = { location: \"/#!/4\" };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 480,
        "wires": [
            [
                "06200f288e5e02a9"
            ]
        ]
    },
    {
        "id": "06200f288e5e02a9",
        "type": "http response",
        "z": "01557fa3c5d57cbe",
        "name": "http_response",
        "statusCode": "",
        "headers": {},
        "x": 1380,
        "y": 480,
        "wires": []
    },
    {
        "id": "342a07ec23ace6e8",
        "type": "mongodb4",
        "z": "01557fa3c5d57cbe",
        "clientNode": "08886a7cd4dd855e",
        "mode": "collection",
        "collection": "client",
        "operation": "deleteOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "remove_user",
        "x": 890,
        "y": 480,
        "wires": [
            [
                "22835d4307fbe224"
            ]
        ]
    }
]